#!/usr/bin/env python
import os
import fnmatch
import re
import argparse
import datetime
import json
from glim_layouts import Glyph_mappings, Layouts, Extra_No_Auto
from lua_helper import dump_lua


def glyph_encoding(glyph_dict="../assets/xiaohe-8105.json"):
    glyph_table_out = "../cache/lua/glyph"
    if not os.path.exists(glyph_table_out):
        os.makedirs(glyph_table_out)
    dict_json = json.load(open(glyph_dict, "r"))
    for layout_type, mappings in Glyph_mappings.items():
        glyph_lua_table = glyph_table_out + "/" + layout_type + ".lua"
        glyph_encoding_lua = {}
        for i in dict_json:
            lvl = int(i["level"])
            word = i["character"]
            auto = lvl < 3 and word not in Extra_No_Auto
            glyph_encoding_lua[word] = {
                "ch1": mappings[i["first_py"]]["map"],
                "ch2": mappings[i["last_py"]]["map"],
                "gl1": i["first_part"],
                "gl2": i["last_part"],
                "auto": auto,
            }
        with open(glyph_lua_table, "w") as table_out:
            table_out.write(
                "-- This file is auto generated by glim, manual editing is not recommended. --\n\n"
            )
            table_out.write("local glyph_table =\n")
            table_out.write(dump_lua(glyph_encoding_lua))
            table_out.write("return glyph_table")


if __name__ == "__main__":
    exit(glyph_encoding())
